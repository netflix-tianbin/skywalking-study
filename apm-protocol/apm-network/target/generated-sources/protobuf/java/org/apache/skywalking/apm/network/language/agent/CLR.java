// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/CLR.proto

package org.apache.skywalking.apm.network.language.agent;

public final class CLR {
  private CLR() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLRMetric_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CLRMetric_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClrGC_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClrGC_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ClrThread_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ClrThread_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020common/CLR.proto\032\023common/common.proto\"" +
      "\\\n\tCLRMetric\022\014\n\004time\030\001 \001(\003\022\021\n\003cpu\030\002 \001(\0132" +
      "\004.CPU\022\022\n\002gc\030\003 \001(\0132\006.ClrGC\022\032\n\006thread\030\004 \001(" +
      "\0132\n.ClrThread\"i\n\005ClrGC\022\030\n\020Gen0CollectCou" +
      "nt\030\001 \001(\003\022\030\n\020Gen1CollectCount\030\002 \001(\003\022\030\n\020Ge" +
      "n2CollectCount\030\003 \001(\003\022\022\n\nHeapMemory\030\004 \001(\003" +
      "\"\217\001\n\tClrThread\022&\n\036AvailableCompletionPor" +
      "tThreads\030\001 \001(\005\022\036\n\026AvailableWorkerThreads" +
      "\030\002 \001(\005\022 \n\030MaxCompletionPortThreads\030\003 \001(\005" +
      "\022\030\n\020MaxWorkerThreads\030\004 \001(\005BQ\n0org.apache",
      ".skywalking.apm.network.language.agentP\001" +
      "\252\002\032SkyWalking.NetworkProtocolb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.skywalking.apm.network.common.Common.getDescriptor(),
        }, assigner);
    internal_static_CLRMetric_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLRMetric_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CLRMetric_descriptor,
        new java.lang.String[] { "Time", "Cpu", "Gc", "Thread", });
    internal_static_ClrGC_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ClrGC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClrGC_descriptor,
        new java.lang.String[] { "Gen0CollectCount", "Gen1CollectCount", "Gen2CollectCount", "HeapMemory", });
    internal_static_ClrThread_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ClrThread_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ClrThread_descriptor,
        new java.lang.String[] { "AvailableCompletionPortThreads", "AvailableWorkerThreads", "MaxCompletionPortThreads", "MaxWorkerThreads", });
    org.apache.skywalking.apm.network.common.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
